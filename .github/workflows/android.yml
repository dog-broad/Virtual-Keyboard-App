name: Build, Sign, Release APK, and Deploy to GitHub Pages

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags (v1.0, v2.0, etc.)
  workflow_dispatch:  # Allow manual trigger from the Actions tab

permissions:
  contents: write  # Ensure the token has write permissions for contents

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      # Step 2: Set up JDK
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # Step 3: Grant execute permission for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Step 4: Build Release APK
      - name: Build Release APK
        run: ./gradlew assembleRelease

      # Step 5: Decode base64-encoded keystore
      - name: Decode Keystore
        run: echo "${{ secrets.KEY_STORE }}" | base64 -d > keystore.jks

      # Step 6: Sign APK
      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        id: sign_app
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEY_STORE }}
          alias: ${{ secrets.KEY_STORE_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASS }}
          keyPassword: ${{ secrets.KEY_STORE_PASS }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      # Step 7: Upload Signed APK as artifact
      - uses: actions/upload-artifact@v4
        with:
          name: Signed app bundle
          path: ${{ steps.sign_app.outputs.signedReleaseFile }}

      # Step 8: Create a release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: Release for version ${{ github.ref_name }}.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 9: Upload APK to release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.sign_app.outputs.signedReleaseFile }}
          asset_name: signed-app-release.apk
          asset_content_type: application/vnd.android.package-archive

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4.1.7

      # Step 2: Download the signed APK artifact
      - name: Download Signed APK
        uses: actions/download-artifact@v3
        with:
          name: Signed app bundle
          path: ./release

      # Step 3: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./release
