name: Build and Sign APK

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags (v1.0, v2.0, etc.)
  workflow_dispatch:  # Allow manual trigger from the Actions tab

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4.1.7

      # Step 2: Set up JDK
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # Step 3: Grant execute permission for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Step 4: Build Release APK
      - name: Build Release APK
        run: ./gradlew assembleRelease

      # Step 5: Decode base64-encoded keystore
      - name: Decode Keystore
        run: echo "${{ secrets.KEY_STORE }}" | base64 -d > keystore.jks

      # Step 6: Sign APK
      - name: Sign app APK
        id: sign_app
        run: |
          jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 \
            -keystore keystore.jks \
            -storepass "${{ secrets.KEY_STORE_PASS }}" \
            -keypass "${{ secrets.KEY_STORE_PASS }}" \
            app/build/outputs/apk/release/app-release-unsigned.apk \
            "${{ secrets.KEY_STORE_ALIAS }}"

      # Step 7: Verify APK signature
      - name: Verify APK signature
        run: jarsigner -verify -verbose -certs app/build/outputs/apk/release/app-release-unsigned.apk

      # Step 8: Zipalign APK (optional but recommended)
      - name: Zipalign APK
        run: zipalign -v 4 \
            app/build/outputs/apk/release/app-release-unsigned.apk \
            app/build/outputs/apk/release/app-release-signed.apk

      # Step 9: Upload Signed APK as artifact
      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: Signed app bundle
          path: app/build/outputs/apk/release/app-release-signed.apk
