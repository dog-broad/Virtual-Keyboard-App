name: Build and Release ServerApp

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest  # Ensure the runner is Windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Upgrade pip and install build tools
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install pyinstaller

      - name: Install Python dependencies
        run: |
          pip install -r server/requirements.txt

      - name: Build executable
        run: |
          pyinstaller --name=ServerApp --onefile --windowed --icon='server/server.ico' --add-data="server/server.ico;." server/server.py

      - name: Upload executable as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ServerApp
          path: server/dist/ServerApp.exe

      - name: Get latest release
        id: get_release
        shell: pwsh
        run: |
          $release = Invoke-RestMethod -Uri "https://api.github.com/repos/dog-broad/Virtual-Keyboard-App/releases/latest"
          $release_id = $release.id
          $upload_url = $release.upload_url -replace '\{.*\}', ''
          Write-Output "Release ID: $release_id"
          Write-Output "Upload URL: $upload_url"
          [System.IO.File]::WriteAllText("$env:GITHUB_ENV", "release_id=$release_id`nupload_url=$upload_url")

  upload:
    runs-on: ubuntu-latest  # This job can run on Ubuntu since it just uploads artifacts
    needs: build  # Ensure this job runs after the build job completes

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: ServerApp

      - name: Upload to latest release
        shell: bash
        run: |
          filePath="ServerApp.exe"
          uploadUrl="${{ env.upload_url }}?name=ServerApp.exe"
          echo "Uploading $filePath to $uploadUrl"
          curl -X POST "$uploadUrl" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @"$filePath"
