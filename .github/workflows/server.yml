name: Build and Release ServerApp

on:
  push:
    branches:
      - main  # Change this to your default branch if it's different
  pull_request:
    branches:
      - main  # Change this to your default branch if it's different

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Specify the Python version you need

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller

      - name: Install Python dependencies
        run: |
          pip install -r server/requirements.txt

      - name: Build executable
        run: |
          pyinstaller --name=ServerApp --onefile --windowed --icon='server/server.ico' --add-data="server/server.ico;." server/server.py

      - name: Upload executable
        uses: actions/upload-artifact@v3
        with:
          name: ServerApp
          path: server/dist/ServerApp.exe

      - name: Get latest release
        id: get_release
        run: |
          release=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/latest")
          echo "::set-output name=release_id::$(echo $release | jq -r '.id')"
          echo "::set-output name=upload_url::$(echo $release | jq -r '.upload_url' | sed 's/{.*//')"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to latest release
        run: |
          curl -s -X POST "${{ steps.get_release.outputs.upload_url }}?name=ServerApp.exe" \
               -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
               -H "Content-Type: application/octet-stream" \
               --data-binary @server/dist/ServerApp.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
